SYMBOLS {
    __STACKSIZE__: value = $0800, type = weak; # 2k stack
}
MEMORY {
    ZP:		start = $0002, size = $001A, type = rw, define = yes;
#The ROM header goes here.
    CHEADER:	start = $0000, size = $0040, type = ro, file = %O, fill=yes;
#The ROM segment header for Bank 0 goes here.
    ROMCHIP1:	start = $0000, size = $0010, type = ro, file = %O, fill=yes;
#8k catridge data for Bank 0.
    ROM1:	start = $8000, size = $4000, file = %O, fill=yes, define = yes;
#The ROM segment header for Bank 0 goes here.
    ROMCHIP2:	start = $0000, size = $0010, type = ro, file = %O, fill=yes;
#8k catridge data for Bank 0.
    ROM2:	start = $8000, size = $4000, file = %O, fill=yes, define = yes;
#The ROM segment header for Bank 0 goes here.
    ROMCHIP3:	start = $0000, size = $0010, type = ro, file = %O, fill=yes;
#8k catridge data for Bank 0.
    ROM3:	start = $8000, size = $4000, file = %O, fill=yes, define = yes;
#The ROM segment header for Bank 0 goes here.
    ROMCHIP4:	start = $0000, size = $0010, type = ro, file = %O, fill=yes;
#8k catridge data for Bank 0.
    ROM4:	start = $8000, size = $4000, file = %O, fill=yes, define = yes;
#Usable RAM for data.
    RAM:	start = $0800, size = $7800, type = rw, define = yes;
#Data at $C000.  Not normally used but made available to your cartridge.
#Top 2k is for the stack.
    HIRAM:	start = $C000, size = $1000-__STACKSIZE__, type = rw;
}
SEGMENTS {
#Cartridge ID and settings
    HEADERDATA:	load = CHEADER, type = ro;
    CHIP0:	load = ROMCHIP1, type = ro;
    CHIP1:	load = ROMCHIP2, type = ro;
    CHIP2:	load = ROMCHIP3, type = ro;
    CHIP3:	load = ROMCHIP4, type = ro;
#-----------------------------------------
    STARTUP:	load = ROM1, type = ro;
    ONCE:	load = ROM1, type = ro;
    INIT:	load = ROM1, type = ro, define = yes, optional = yes;
#The following code segments are copied to RAM so that they are accessicle to
#all banks:
    LOWCODE:	load = ROM1, run = RAM, type = ro, define = yes, optional = yes;
    CODE:	load = ROM1, run = RAM, define = yes, type = ro;
    RODATA:	load = ROM1, run = RAM, define = yes, type = ro;
    BANKACCESS:	load = ROM1, run = HIRAM, define = yes, type = ro;
    DATA:	load = ROM1, run = RAM, type = rw, define = yes;
#-----------------------------------------
#Cartridge contents for Banks 1-3:
    CODE2:	load = ROM2, type = ro;
    RODATA2:	load = ROM2, type = ro;
    CODE3:	load = ROM3, type = ro;
    RODATA3:	load = ROM3, type = ro;
    CODE4:	load = ROM4, type = ro;
    RODATA4:	load = ROM4, type = ro;
#-----------------------------------------
    BSS:	load = RAM, type = bss, define = yes;
    HEAP:	load = RAM, type = bss, optional = yes; # must sit just below stack
#Data stored at $C000.
    BSSHI:	load = HIRAM, type = bss, define = yes, optional = yes;
    ZEROPAGE:	load = ZP,  type = zp;
}
FEATURES {
    CONDES: segment = INIT,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = interruptor,
	    label = __INTERRUPTOR_TABLE__,
	    count = __INTERRUPTOR_COUNT__;
}


